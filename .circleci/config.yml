version: 2.1
orbs: 
  android: circleci/android@2
  flutter: circleci/flutter@1
parameters:
  flutter_version:
    type: string
    default: 2.10.5
jobs:
  test_flutter_package:
    docker:
      - image: cimg/base:2022.04
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          flutter_version: << pipeline.parameters.flutter_version >>
      - run:
          name: Analyze App Facing Package
          command: |
              cp example/.env.example example/.env
              dart analyze
          working_directory: ./auth0_flutter
      - run:
          name: Run package unit tests
          command: |
            flutter test
          working_directory: ./auth0_flutter
      - flutter/install_pub:
          app-dir: ./auth0_flutter_platform_interface
      - run:
          name: Analyze Platform Interface Package
          command: dart analyze
          working_directory: ./auth0_flutter_platform_interface
      - run:
          name: Run platform interface unit tests
          command: |
            flutter test
          working_directory: ./auth0_flutter_platform_interface
  test_android:
    executor:
      name: android/android-machine
      resource-class: medium
      tag: 2021.10.1
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          flutter_version: << pipeline.parameters.flutter_version >>
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Build Android Example App
          command: |
            cp .env.example .env
            flutter build apk
          working_directory: ./auth0_flutter/example
      - run:
          name: Run tests
          command: |
            mv local.properties.ci local.properties
            mv ../.env.example ../.env
            gradle clean test
          working_directory: ./auth0_flutter/example/android
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          when: always
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/auth0_flutter/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  test_ios:
    macos:
      xcode: 13
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter/example
          flutter_version: << pipeline.parameters.flutter_version >>
      - run:
          name: Run tests
          command: |
            pod install
            cp ../.env.example ../.env
            xcodebuild test -scheme Runner -workspace Runner.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 13'
          working_directory: ./auth0_flutter/example/ios
      
workflows:
  build_and_test:
    jobs:
      - test_flutter_package
      - test_android:
          requires:
            - test_flutter_package
      - test_ios:
          requires:
            - test_flutter_package
