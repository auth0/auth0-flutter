version: 2.1
orbs:
  android: circleci/android@2
  macos: circleci/macos@2
  flutter: circleci/flutter@1
parameters:
  flutter_version:
    type: string
    default: 2.10.5
jobs:
  test_flutter_package:
    docker:
      - image: cimg/base:2022.04
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          flutter_version: << pipeline.parameters.flutter_version >>
      - run:
          name: Analyze App Facing Package
          command: |
              cp example/.env.example example/.env
              dart analyze
          working_directory: ./auth0_flutter
      - run:
          name: Run package unit tests
          command: |
            flutter test
          working_directory: ./auth0_flutter
      - flutter/install_pub:
          app-dir: ./auth0_flutter_platform_interface
      - run:
          name: Analyze Platform Interface Package
          command: dart analyze
          working_directory: ./auth0_flutter_platform_interface
      - run:
          name: Run platform interface unit tests
          command: |
            flutter test
          working_directory: ./auth0_flutter_platform_interface
  test_android:
    executor:
      name: android/android-machine
      resource-class: medium
      tag: 2021.10.1
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          flutter_version: << pipeline.parameters.flutter_version >>
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Build Android Example App
          command: |
            cp .env.example .env
            flutter build apk --debug
          working_directory: ./auth0_flutter/example
      - run:
          name: Run tests
          command: |
            mv local.properties.ci local.properties
            mv ../.env.example ../.env
            gradle clean test
          working_directory: ./auth0_flutter/example/android
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          when: always
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/auth0_flutter/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
  integration_test_android:
    executor:
      name: android/android-machine
      resource-class: medium
      tag: 2021.10.1
    environment:
      APPIUM_URL: http://127.0.0.1:4723/wd/hub/
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          flutter_version: << pipeline.parameters.flutter_version >>
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Build Android Example App
          command: |
            cp .env.example .env
            flutter build apk --debug
          working_directory: ./auth0_flutter/example
      - run:
          name: Run integration tests
          command: |
            npm i -g appium appium-flutter-driver
            npx appium-doctor
      - run:
          name: SDKs
          command: sdkmanager --list
      - android/create-avd:
          avd-name: myavd
          install: true
          system-image: system-images;android-30;default;x86_64
      - android/start-emulator:
          avd-name: myavd
          no-window: true
          restore-gradle-cache-prefix: v1a
          post-emulator-launch-assemble-command: npx concurrently --raw --kill-others --success first "adb kill-server && adb start-server && appium" "adb kill-server && adb start-server && cd auth0_flutter/example && dart test integration_test/smoke_test.dart"

  test_ios:
    parameters:
        ios_simulator:
          type: string
    macos:
      xcode: 13
    steps:
      - checkout
      - macos/preboot-simulator:
          version: "15.0"
          platform: iOS
          device: << parameters.ios_simulator >>
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter/example
          flutter_version: << pipeline.parameters.flutter_version >>
      - run:
          name: Run tests
          command: |
            printf '%s\n%s\n%s' "AUTH0_DOMAIN=$AUTH0_DOMAIN" "AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID" 'AUTH0_CUSTOM_SCHEME=demo' >> ../.env
            pod install
            SCHEME=Runner
            WORKSPACE="$SCHEME".xcworkspace
            SIMULATOR='platform=iOS Simulator,name=<< parameters.ios_simulator >>'
            if [ -z "$CIRCLE_PR_NUMBER" ]; then
              xcodebuild test -scheme "$SCHEME" -workspace "$WORKSPACE" -destination "$SIMULATOR"
            else
              xcodebuild test -scheme "$SCHEME" -workspace "$WORKSPACE" -destination "$SIMULATOR" -skip-testing:"$SCHEME"UITests
            fi
          working_directory: ./auth0_flutter/example/ios

workflows:
  build_and_test:
    jobs:
      - test_flutter_package
      - test_android:
          requires:
            - test_flutter_package
      - test_ios:
          ios_simulator: iPhone 13
          requires:
            - test_flutter_package
      - integration_test_android:
          context:
            - browserstack-env
