version: 2.1
orbs:
  android: circleci/android@2
  macos: circleci/macos@2
  flutter: circleci/flutter@2
  browser-tools: circleci/browser-tools@1
  codecov: codecov/codecov@3
  node: circleci/node@5
  local-android:
    orbs:
      android: circleci/android@2
    commands:
      prepare-config:
        description: Prepares the environment configuration files
        steps:
          - run:
              name: Prepare Environment Configuration
              command: |
                cp .env.example .env
                sed -i "s/YOUR_AUTH0_DOMAIN/$AUTH0_DOMAIN/" .env
                sed -i "s/YOUR_AUTH0_CLIENT_ID/$AUTH0_CLIENT_ID/" .env
                sed -i "s/YOUR_AUTH0_CUSTOM_SCHEME/$AUTH0_CUSTOM_SCHEME/" .env
                mv android/app/src/main/res/values/strings.xml.example android/app/src/main/res/values/strings.xml
                sed -i "s/YOUR_AUTH0_DOMAIN/$AUTH0_DOMAIN/" android/app/src/main/res/values/strings.xml
                mv android/local.properties.ci android/local.properties
              working_directory: ./auth0_flutter/example
parameters:
  flutter_version:
    type: string
    default: 3.10.5
jobs:
  test_flutter_package:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          version: << pipeline.parameters.flutter_version >>
      - flutter/install_pub:
          app-dir: ./auth0_flutter
      - browser-tools/install-chrome
      - run:
          name: Analyze App Facing Package
          command: |
            cp example/.env.example example/.env
            dart analyze
          working_directory: ./auth0_flutter
      - run:
          name: Run package unit tests
          command: |
            flutter test --tags browser --platform chrome
            flutter test --coverage --exclude-tags browser
          working_directory: ./auth0_flutter
      - flutter/install_pub:
          app-dir: ./auth0_flutter_platform_interface
      - run:
          name: Analyze Platform Interface Package
          command: dart analyze
          working_directory: ./auth0_flutter_platform_interface
      - run:
          name: Run platform interface unit tests
          command: flutter test --coverage
          working_directory: ./auth0_flutter_platform_interface
      - codecov/upload:
          file: ./auth0_flutter/coverage/lcov.info
          upload_name: Auth0 Flutter
          flags: auth0_flutter
      - codecov/upload:
          file: ./auth0_flutter_platform_interface/coverage/lcov.info
          upload_name: Auth0 Flutter Platform Interface
          flags: auth0_flutter_platform_interface
  test_android:
    executor:
      name: android/android-machine
      resource-class: medium
      tag: 2022.06.1
    steps:
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          version: << pipeline.parameters.flutter_version >>
      - flutter/install_pub:
          app-dir: ./auth0_flutter
      - android/restore-gradle-cache
      - android/restore-build-cache
      - local-android/prepare-config
      - run:
          name: Build Android Example App
          command: flutter build apk
          working_directory: ./auth0_flutter/example
      - run:
          name: Run Android Unit tests
          command: gradle clean jacocoTestReportDebug
          working_directory: ./auth0_flutter/example/android
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          when: always
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/auth0_flutter/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - codecov/upload:
          file: ./auth0_flutter/example/build/auth0_flutter/reports/jacoco/debug/jacoco.xml
          upload_name: Auth0 Flutter Android
          flags: auth0_flutter_android
  smoke_test_android:
    machine:
      image: android:2022.12.1
      # To optimize build times, we recommend "large" and above for Android-related jobs
      resource_class: xlarge
    steps:
      - run:
          name: Guard Smoke Tests
          command: |
            if ! [[ -z "$CIRCLE_PR_NUMBER" ]]; then
                circleci-agent step halt
            fi
      - checkout
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          version: << pipeline.parameters.flutter_version >>
      - local-android/prepare-config
      - node/install:
          node-version: '18.16.0'
          install-yarn: true
      - run:
          name: Setup Appium Test
          working_directory: ./appium-test
          command: yarn
      - run:
          name: Setup Appium driver
          command: APPIUM_SKIP_CHROMEDRIVER_INSTALL=1 npx --yes appium@next driver install uiautomator2
      - run:
          name: Start appium
          command: npx --yes appium@next #Appium recommends this until v2 is released
          background: true
      - run:
          name: Generate cache key
          command: |
            find . -name 'build.gradle' | sort | xargs cat |
            shasum | awk '{print $1}' > /tmp/gradle_cache_seed
      - restore_cache:
          key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
      - run:
          name: Gradle Wrapper
          working_directory: ./auth0_flutter/example/android
          command: gradle wrapper
      - run:
          name: Build Android Example App
          command: |
            flutter clean
            flutter build apk --split-per-abi
          working_directory: ./auth0_flutter/example
      - run:
          name: Create avd
          command: |
            SYSTEM_IMAGES="system-images;android-29;google_apis_playstore;x86_64"
            sdkmanager "$SYSTEM_IMAGES"
            echo "no" | avdmanager --verbose create avd -n test -k "$SYSTEM_IMAGES"
      - run:
          name: Launch emulator
          command: |
            emulator -avd test -delay-adb -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          background: true
      - run:
          name: Wait for emulator to start
          command: |
            circle-android wait-for-boot
      - run:
          name: Disable emulator animations and Chrome terms page
          command: |
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0
            adb shell am set-debug-app --persistent com.android.chrome 
            adb shell 'echo "chrome --disable-fre --no-default-browser-check --no-first-run" > /data/local/tmp/chrome-command-line'
      - run:
          name: Record screen
          command: |
            adb emu screenrecord start --time-limit 300 ./recording_video.webm
      - run:
          name: Run Appium Tests
          command: USER_EMAIL=$USER_EMAIL USER_PASSWORD=$USER_PASSWORD node test.js
          working_directory: ./appium-test
      - save_cache:
          key: gradle-v1-{{ arch }}-{{ checksum "/tmp/gradle_cache_seed" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
      - store_artifacts:
          path: ./recording_video.webm
          when: on_fail
  test_ios:
    parameters:
      ios_version:
        type: string
      ios_simulator:
        type: string
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.large.gen1
    environment:
      BUNDLE_RETRY: 3
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    steps:
      - checkout
      - macos/preboot-simulator:
          version: << parameters.ios_version >>
          platform: iOS
          device: << parameters.ios_simulator >>
      - run:
          name: Install Rosetta
          command: /usr/sbin/softwareupdate --install-rosetta --agree-to-license
      - flutter/install_sdk_and_pub:
          app-dir: ./auth0_flutter
          version: << pipeline.parameters.flutter_version >>
      - flutter/install_pub:
          app-dir: ./auth0_flutter/example
      - flutter/install_ios_gem:
          app-dir: ./auth0_flutter/example
      - flutter/install_ios_pod:
          app-dir: ./auth0_flutter/example
      - run:
          name: Run iOS tests
          command: |
            printf '%s\n%s\n%s' "AUTH0_DOMAIN=$AUTH0_DOMAIN" "AUTH0_CLIENT_ID=$AUTH0_CLIENT_ID" 'AUTH0_CUSTOM_SCHEME=demo' >> ../.env
            pod install
            SCHEME=Runner
            WORKSPACE="$SCHEME".xcworkspace
            SIMULATOR='platform=iOS Simulator,name=<< parameters.ios_simulator >>'
            if [ -z "$CIRCLE_PR_NUMBER" ]; then
              xcodebuild test -scheme "$SCHEME" -workspace "$WORKSPACE" -destination "$SIMULATOR"
            else
              xcodebuild test -scheme "$SCHEME" -workspace "$WORKSPACE" -destination "$SIMULATOR" -skip-testing:"$SCHEME"UITests
            fi
          working_directory: ./auth0_flutter/example/ios
      - run:
          name: Generate iOS test coverage report
          command: |
            mkdir cobertura
            bundle exec slather
          working_directory: ./auth0_flutter/example/ios
      - run:
          name: Create ~/.gnupg dir if it does not exist
          command: mkdir -p ~/.gnupg
      - codecov/upload:
          file: ./auth0_flutter/example/ios/cobertura/cobertura.xml
          upload_name: Auth0 Flutter iOS
          flags: auth0_flutter_ios
          xtra_args: -s ./auth0_flutter/example/ios/cobertura
workflows:
  build_and_test:
    jobs:
      - test_flutter_package
      - test_android:
          requires:
            - test_flutter_package
      - smoke_test_android:
          requires:
            - test_flutter_package
      - test_ios:
          ios_version: "16.2"
          ios_simulator: iPhone 14
          requires:
            - test_flutter_package